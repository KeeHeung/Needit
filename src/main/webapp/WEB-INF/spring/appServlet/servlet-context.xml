<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- spring-tx 모듈의 어노테이션 활성화 태그 -->
	<!-- 	-> @Transactional 어노테이션 처리를 허가한다 -->
	<tx:annotation-driven />

	<!-- @Aspect 어노테이션을 이용한 AOP객체 관리 활성화 태그 -->
	<aop:aspectj-autoproxy />
	
	<!-- 일단 스케줄러 -->
	<task:annotation-driven />

	<!-- 정적 자원에 대한 URL(mapping속성)을 폴더(location속성)에서
		찾아서 응답에 사용하는 것을 허가한다 -->
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/upload/**" location="/upload/" />	
	
	<!-- 컨트롤러 메소드에서 전달된 viewName을 이용하여 JSP view를 응답으로 정한다 -->
	<!-- /WEB-INF/views directory 경로에 있는 jsp파일로 -->
	<!-- Resolves views selected for rendering by @Controllers
	 to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		
		<beans:property name="order" value="1" />
	</beans:bean>

	<!-- 우선 순위 등록 -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0" />
	</beans:bean>
	
	<!-- 파일 다운로드 뷰 -->
	<!-- FileDownloadView 클래스를 스프링 빈으로 등록하기 -->
	<beans:bean id="down" class="web.util.DownloadView" />
	
	<!-- JSON 응답용 jsonView 클래스를 스프링 빈으로 등록하기 -->
	<beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<beans:property name="contentType" value="application/json; charset=utf-8"/>
	</beans:bean>

	<!-- 파일업로드(multipart/form-data)를 처리하는 스프링 빈 -->   
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
   
		<!-- 메모리에서 임시 파일을 처리할 수 있는 최대 사이즈 : 1MB  -->
		<beans:property name="maxInMemorySize" value="1048576"></beans:property>
   
		<!-- 파일 업로드 최대 허용 사이즈 : 10MB -->
		<beans:property name="maxUploadSize" value="10485760"></beans:property>
   
		<!-- 업로드된 파일 하나 당 사이즈 제한 : 5MB -->
		<beans:property name="maxUploadSizePerFile" value="5242880"></beans:property>
      
	</beans:bean>	
	
	<!-- 스프링 컴포넌트를 탐색할 패키지를 설정한다 -->
	<!-- 	@Controller, @Service, @Repository가 적용된 클래스를
			스프링 빈으로 등록하고 컴포넌트 역할에 맞게 사용할 준비를 한다 -->
	<context:component-scan base-package="needit.project.opening, web.controller, web.service, web.dao, web.util, web.scheduler.task, web.scheduler.dao" />
	
	

</beans:beans>










