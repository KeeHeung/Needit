<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
 <mapper namespace="web.dao.face.UserProfileDao">
  
 	<update id="infoUpdate" parameterType="User">
 		UPDATE usertb 
 		SET pw = #{pw}, nick = #{nick}, gender = #{gender}, addr1 = #{addr1}, addr2 = #{addr2}
 		WHERE id = #{id}
 	
 	</update> 
 	
 	
 	<delete id="deleteUser" parameterType="String">
 		DELETE
 		FROM usertb
 		WHERE id = #{id}
 	</delete>
 	
 	<!-- 예약 목록 -->
 	<select id="selectMyRentList" resultType="Map" parameterType="User">
	 	SELECT B.board_no, A.renter_id, A.rent_no,A.rent_date, A.start_time, A.end_time
		FROM rent A
		INNER JOIN board B ON B.board_no = A.board_no
		WHERE B.writer_id = #{id}
		ORDER BY board_no, rent_no DESC
 	</select>
 	
 	<!-- 내가 예약한 목록 -->
 	<select id="selectRentList" resultType="Map" parameterType="User">
 		SELECT B.board_no, A.renter_id, A.rent_no, A.rent_date, A.start_time, A.end_time
		FROM rent A
		INNER JOIN board B ON B.board_no = A.board_no
		WHERE A.renter_id = #{id}
		ORDER BY board_no, rent_no DESC
		 	
 	</select>
  
	

	<!-- 원래 업데이트여야되는데 user_page 테이블에 행이 존재하지않는데 업데이트할수가 없어서 인서트로 했음 -->
	<!-- 	중배햄한테 user만들때 userpage만들어달라고 하기-->

	<insert id="updateImg" parameterType="map">
	    <selectKey resultType="int" order="BEFORE" keyProperty="profileImgno">
	        SELECT user_file_seq.nextval FROM dual
	    </selectKey>
	    INSERT INTO user_file( id, profile_imgno, origin_name, stored_name, thumbnail_name, file_type)
	    VALUES( #{id}, #{profileImgno}, #{originName}, #{storedName}, #{thumbnailName}, #{fileType} )
	</insert>


	
	<select id="selectImg" resultType="UserFile" parameterType="String">
		SELECT id, profile_imgno, origin_name, stored_name, thumbnail_name, file_type
		FROM user_file
        WHERE id = #{userId}
	</select>
	
	<!-- 추천수 조회 -->
	<select id="selectLikeByBoardNo" resultType="int" parameterType="User">
	    SELECT 
	        COUNT(l.like_id) AS like_count
	    FROM board b
	    LEFT JOIN liketb l ON b.board_no = l.board_no
	    <where>
	        b.writer_id = #{id}
	    </where>
	
	</select>
	
	<!-- 회원등급 -->
	<update id="updateCrackEgg" parameterType="User">
		UPDATE usertb
		<set>
			grade = '2'
		</set>
		<where>
			grade = '1'
			AND id = #{id}
		</where>
	</update>
	
	<update id="updateChick" parameterType="User">
		UPDATE usertb
		<set>
			grade = '3'
		</set>
		<where>
			grade = '2'
			AND id = #{id}
		</where>
	</update>
	
	<update id="updateChicken" parameterType="User">
		UPDATE usertb
		<set>
			grade = '4'
		</set>
		<where>
			grade = '3'
			AND id = #{id}
		</where>
	</update>
	
	<update id="updateFriedChicken" parameterType="User">
		UPDATE user
		<set>
			grade = '5'
		</set>
		<where>
			grade = '4'
			AND id = #{id}
		</where>
	</update>
	
	<select id="selectGrade" resultType="User" parameterType="User">
		SELECT grade FROM usertb
		<where>
			id = #{id}
		</where>
	
	</select>
	
	
	<update id="updateIntroduce" parameterType="User">
		UPDATE usertb
		SET intro = #{intro}
		WHERE id = #{id}
	</update>
	
	
	<update id="deleteImg" parameterType="User">
		UPDATE usertb
		SET 
			ORIGIN_NAME = NULL,
		    STORED_NAME = NULL,
		    THUMBNAIL_NAME = NULL,
		    FILE_TYPE = NULL
		WHERE id = #{id}
	</update>
	
	<update id="updateRentStatus" parameterType="Rent">
		UPDATE rent
		<set>
			rent_status = '2'
		</set>
		<where>
			rent_status = '1'
			AND board_no = #{boardNo}
			AND rent_no = #{rentNo}
		</where>
		
	</update>
	
	<update id="updateCancel" parameterType="Rent">
		UPDATE rent
		<set>
			rent_status = '0'
		</set>
		<where>
			rent_status = '1'
			AND board_no = #{boardNo}
			AND rent_no = #{rentNo}
		</where>
		
	</update>





 </mapper>